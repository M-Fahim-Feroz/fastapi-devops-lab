services:

  api:
    build: ./api
    ports:
      - "81:8000"
    command: uvicorn main:app --host 0.0.0.0 --reload
    volumes:
      - ./api:/usr/src/app
    environment:
      - CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}
      - CELERY_RESULT_BACKEND=db+postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@database:5432/${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - DATABASE_URL=db+postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@database:5432/${{ secrets.POSTGRES_DB }}
      - WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
    depends_on:
      - redis
      - database
    networks:
      - app-network

  worker:
    build: ./api
    command: celery -A tasks worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./api:/usr/src/app
    environment:
      - CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }} # redis://redis:6379/0
      - CELERY_RESULT_BACKEND=db+postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@database:5432/${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - DATABASE_URL=db+postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@database:5432/${{ secrets.POSTGRES_DB }}
      - WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
    depends_on:
      - api
      - redis
      - database
    networks:
      - app-network

  redis:
    image: redis:latest
    networks:
      - app-network

  database:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge